name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Puedes cambiar la versión según tu proyecto

      - name: Install dependencies
        run: npm install

      - name: Check Java version
        run: java -version

      - name: Install Sonar Scanner
        run: npm install -g sonar-scanner

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Check Java version
        run: java -version

       - name: Check SonarQube connectivity
         run: |
           curl -I http://eugalde.ddns.net:9000

      - name: Print Sonar Host URL
        run: echo $SONAR_HOST_URL

      - name: Run SonarQube Scanner
        run: sonar-scanner

      - name: Run tests
        run: npm test

      - name: SonarQube scan
        env:
          SONAR_HOST_URL: "http://eugalde.ddns.net:9000"
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        run: |
          npm install -g sonar-scanner
          sonar-scanner \
            -Dsonar.projectKey=pruebaactions \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
            -X
