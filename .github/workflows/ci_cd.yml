name: CI/CD Pipeline
#eugalde
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Check Java version
        run: java -version

      - name: Install Sonar Scanner
        run: npm install -g sonar-scanner

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Check Java version
        run: java -version

      - name: Check SonarQube connectivity
        run: curl -I http://eugalde.ddns.net:9000

      - name: Print Sonar Host URL
        run: echo $SONAR_HOST_URL

      - name: SonarQube scan
        env:
          SONAR_HOST_URL: "http://eugalde.ddns.net:9000"
          SONAR_USER: ${{ secrets.SONAR_USER }}
          SONAR_PASSWORD: ${{ secrets.SONAR_PASSWORD }}
        run: |
          sonar-scanner \
            -Dsonar.login=$SONAR_USER \
            -Dsonar.password=$SONAR_PASSWORD \
            -Dsonar.projectKey=pruebaactions \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -X

      - name: Run tests
        run: npm test

  deploy:
    needs: build-and-test
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install production dependencies
        run: npm install --production

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: 'eugalde.ddns.net'
          SERVER_USER: 'interfaz'
          DEPLOY_PATH: '/home/interfaz/prueba'
        run: |
          # Configure SSH for deployment
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

          # Sync files to server
          rsync -avr --delete-after . $SERVER_USER@$SERVER_IP:$DEPLOY_PATH
          
          # Restart or start the application
          ssh $SERVER_USER@$SERVER_IP << 'EOF'
            cd $DEPLOY_PATH
            pm2 restart pruebaactions || pm2 start pruebaactions.js --name pruebaactions
